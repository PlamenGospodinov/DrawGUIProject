using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;

namespace Draw.src.Model
{
    class TriangleShape:Shape
    {
        #region Constructor

        public TriangleShape(RectangleF triang) : base(triang)
        {
        }

        public TriangleShape(TriangleShape triangle) : base(triangle)
        {
        }

        #endregion

        public override bool Contains(PointF point)
        {
            if (base.Contains(point))
                return true;
            else
                return false;
        }

        public override void DrawSelf(Graphics grfx)
        {

            base.DrawSelf(grfx);

            base.RotateShape(grfx);

            //first point is in the middle - X + Width / 2
            Point[] pointOfShape = { new Point((int)Rectangle.X + ((int)Rectangle.Width / 2), (int)Rectangle.Y), new Point((int)Rectangle.X, (int)(Rectangle.Y + Rectangle.Height)), new Point((int)(Rectangle.X + Rectangle.Width), (int)(Rectangle.Y + Rectangle.Height)) };
            grfx.FillPolygon(new SolidBrush(Color.FromArgb(Opacity, FillColor)), pointOfShape);
            grfx.DrawPolygon(new Pen(StrokeColor, BorderWidth), pointOfShape);

            grfx.ResetTransform();

        }
    }
}
